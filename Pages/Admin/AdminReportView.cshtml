@page
@model WebApplication1.Pages.Admin.AdminReportViewModel
@{
    ViewData["Title"] = "Admin Quarterly Reports";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<h2>@ViewData["Title"]</h2>

<!-- Search form -->
<form method="post" class="mb-4">
    <div class="form-group">
        <label for="searchTerm">Search by Report ID or Email</label>
        <input type="text" id="searchTerm" name="searchTerm" class="form-control" placeholder="Enter Report ID or Agency Contact Email" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<!-- Display search results -->
@if (Model.Reports != null && Model.Reports.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Report ID</th>
                <th>Facility Name</th>
                <th>Completed By</th>
                <th>Submission Date</th>
                
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var report in Model.Reports)
            {
                <tr>
                    <td>@report.Id</td>
                    <td>@report.FacilityName</td>
                    <td>@report.CompletedBy</td>
                    <td>@report.SubmissionDate?.ToString("yyyy-MM-dd")</td>
                    <td>@report.Status</td>

                    <td>
                        <!-- Button to trigger the modal for viewing/editing the report -->
                        <button class="btn btn-warning" data-toggle="modal" data-target="#editReportModal" data-report-id="@report.Id" onclick="loadReport(@report.Id)">View/Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Back button -->
    <form method="get">
        <button type="submit" class="btn btn-secondary mt-3">Back to Reports</button>
    </form>
}
else if (Model.SearchPerformed)
{
    <div class="alert alert-warning">No reports found for the provided search term.</div>
    <!-- Back button -->
    <form method="get">
        <button type="submit" class="btn btn-secondary mt-3">Back to Reports</button>
    </form>
}




    <!-- Modal for viewing and editing reports -->
    <div class="modal fade" id="editReportModal" tabindex="-1" role="dialog" aria-labelledby="editReportModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editReportModalLabel">View/Edit Report</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="EditReport">
                        <input type="hidden" id="reportId" name="reportId" />

                        <!-- Add fields for editing report details -->
                        <div class="form-group">
                            <label for="facilityName">Facility Name</label>
                            <input type="text" class="form-control" id="facilityName" name="FacilityName" />
                        </div>

                        <div class="form-group">
                            <label for="completedBy">Completed By</label>
                            <input type="text" class="form-control" id="completedBy" name="CompletedBy" />
                        </div>

                        <div class="form-group">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" name="Address" />
                        </div>

                        <div class="form-group">
                            <label for="phone">Phone</label>
                            <input type="text" class="form-control" id="phone" name="Phone" />
                        </div>

                        <div class="form-group">
                            <label for="fax">Fax</label>
                            <input type="text" class="form-control" id="fax" name="Fax" />
                        </div>

                        <div class="form-group">
                            <label for="status">Status</label>
                            <input type="text" class="form-control" id="status" name="Status" />
                        </div>

                        <!-- Loop through CollectionDetails -->
                        <div class="form-group">
                            <label>Collection Details</label>
                            <table class="table table-bordered" id="collectionDetailsTable">
                                <thead>
                                    <tr>
                                        <th>Sharps Collection Site</th>
                                        <th>Collection Dates</th>
                                        <th>Pounds Collected</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Rows will be dynamically added here -->
                                </tbody>
                            </table>
                            <button type="button" class="btn btn-primary" id="addRow">Add Row</button>
                        </div>

                        <div class="form-group">
                            <label for="syringesProvidedUnits">Syringes Provided (Units)</label>
                            <input type="number" class="form-control" id="syringesProvidedUnits" name="SyringesProvidedUnits" />
                        </div>

                        <div class="form-group">
                            <label for="syringesProvidedSessions">Syringes Provided (Sessions)</label>
                            <input type="number" class="form-control" id="syringesProvidedSessions" name="SyringesProvidedSessions" />
                        </div>

                        <div class="form-group">
                            <label for="pharmacyVouchersUnits">Pharmacy Vouchers (Units)</label>
                            <input type="number" class="form-control" id="pharmacyVouchersUnits" name="PharmacyVouchersUnits" />
                        </div>

                        <div class="form-group">
                            <label for="pharmacyVouchersSessions">Pharmacy Vouchers (Sessions)</label>
                            <input type="number" class="form-control" id="pharmacyVouchersSessions" name="PharmacyVouchersSessions" />
                        </div>

                        <div class="form-group">
                            <label for="reportedVouchersUnits">Reported Vouchers (Units)</label>
                            <input type="number" class="form-control" id="reportedVouchersUnits" name="ReportedVouchersUnits" />
                        </div>

                        <div class="form-group">
                            <label for="reportedVouchersSessions">Reported Vouchers (Sessions)</label>
                            <input type="number" class="form-control" id="reportedVouchersSessions" name="ReportedVouchersSessions" />
                        </div>

                        <div class="form-group">
                            <label for="fitpacksProvidedUnits">Fitpacks Provided (Units)</label>
                            <input type="number" class="form-control" id="fitpacksProvidedUnits" name="FitpacksProvidedUnits" />
                        </div>

                        <div class="form-group">
                            <label for="fitpacksProvidedSessions">Fitpacks Provided (Sessions)</label>
                            <input type="number" class="form-control" id="fitpacksProvidedSessions" name="FitpacksProvidedSessions" />
                        </div>

                        <div class="form-group">
                            <label for="quartContainersProvidedUnits">Quart Containers Provided (Units)</label>
                            <input type="number" class="form-control" id="quartContainersProvidedUnits" name="QuartContainersProvidedUnits" />
                        </div>

                        <div class="form-group">
                            <label for="quartContainersProvidedSessions">Quart Containers Provided (Sessions)</label>
                            <input type="number" class="form-control" id="quartContainersProvidedSessions" name="QuartContainersProvidedSessions" />
                        </div>

                        <div class="form-group">
                            <label for="gallonContainersProvidedUnits">Gallon Containers Provided (Units)</label>
                            <input type="number" class="form-control" id="gallonContainersProvidedUnits" name="GallonContainersProvidedUnits" />
                        </div>

                        <div class="form-group">
                            <label for="gallonContainersProvidedSessions">Gallon Containers Provided (Sessions)</label>
                            <input type="number" class="form-control" id="gallonContainersProvidedSessions" name="GallonContainersProvidedSessions" />
                        </div>

                        <div class="form-group">
                            <label for="otherSuccessesConcernsIssues">Other Successes/Concerns/Issues</label>
                            <textarea class="form-control" id="otherSuccessesConcernsIssues" name="OtherSuccessesConcernsIssues"></textarea>
                        </div>

                        <!-- Add any other necessary fields here -->

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>


@if (Model.Years != null && Model.Years.Any())
{
    <div class="accordion" id="yearAccordion">
        @foreach (var year in Model.Years)
        {
            <div class="card">
                <div class="card-header" id="heading@year">
                    <h5 class="mb-0">
                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapse@year" aria-expanded="false" aria-controls="collapse@year">
                            @year
                        </button>
                    </h5>
                </div>

                <div id="collapse@year" class="collapse" aria-labelledby="heading@year" data-parent="#yearAccordion">
                    <div class="card-body">
                        <div class="accordion" id="quarterAccordion@year">
                            @foreach (var quarter in Model.Quarters.Where(q => q.Year == year))
                            {
                                <div class="card">
                                    <div class="card-header" id="heading@year@quarter.QuarterName">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapse@year@quarter.QuarterName" aria-expanded="false" aria-controls="collapse@year@quarter.QuarterName">
                                                @quarter.QuarterName (@quarter.StartMonth.ToString("MMM") - @quarter.EndMonth.ToString("MMM")) - Due: @quarter.DueDate.ToString("MMMM dd, yyyy")
                                            </button>
                                        </h5>
                                    </div>

                                    <div id="collapse@year@quarter.QuarterName" class="collapse" aria-labelledby="heading@year@quarter.QuarterName" data-parent="#quarterAccordion@year">
                                        <div class="card-body">
                                            <form method="post" asp-page-handler="DownloadReport">
                                                <input type="hidden" name="quarter" value="@quarter.QuarterName" />
                                                <button type="submit" class="btn btn-primary">Download Report</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

<!-- Ensure Bootstrap JS and jQuery are included -->
@section Scripts {
    <script>
        function addCollectionDetailRow(sharpsCollectionSite = '', collectionDates = '', poundsCollected = '') {
            const index = $('#collectionDetailsTable tbody tr').length;

            const formattedDate = collectionDates ? new Date(collectionDates).toISOString().split('T')[0] : '';

            const row = `
        <tr>
            <td><input type="text" class="form-control" name="QuarterlyReport.CollectionDetails[${index}].SharpsCollectionSite" value="${sharpsCollectionSite}" /></td>
            <td><input type="date" class="form-control" name="QuarterlyReport.CollectionDetails[${index}].CollectionDates" value="${formattedDate}" /></td>
            <td><input type="number" class="form-control" name="QuarterlyReport.CollectionDetails[${index}].PoundsCollected" value="${poundsCollected}" /></td>
            <td><button type="button" class="btn btn-danger remove-row">&times;</button></td>
        </tr>
    `;
            $('#collectionDetailsTable tbody').append(row);
        }

        $('#addRow').click(function () {
            addCollectionDetailRow();
        });

        $(document).on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
        });

        // Ensure there's at least one row in the collection details
        function ensureDefaultRows() {
            const currentRows = $('#collectionDetailsTable tbody tr').length;
            const rowsNeeded = 1 - currentRows;

            for (let i = 0; i < rowsNeeded; i++) {
                addCollectionDetailRow();
            }
        }
    function loadReport(reportId) {
            $.get('/Admin/AdminReportView?handler=LoadReport', { id: reportId }, function (data) {
                $('#reportId').val(data.id);
                $('#facilityName').val(data.facilityName);
                $('#completedBy').val(data.completedBy);
                $('#address').val(data.address);
                $('#phone').val(data.phone);
                $('#fax').val(data.fax);
                $('#status').val(data.status);
                $('#syringesProvidedUnits').val(data.syringesProvidedUnits);
                $('#syringesProvidedSessions').val(data.syringesProvidedSessions);
                $('#pharmacyVouchersUnits').val(data.pharmacyVouchersUnits);
                $('#pharmacyVouchersSessions').val(data.pharmacyVouchersSessions);
                $('#reportedVouchersUnits').val(data.reportedVouchersUnits);
                $('#reportedVouchersSessions').val(data.reportedVouchersSessions);
                $('#fitpacksProvidedUnits').val(data.fitpacksProvidedUnits);
                $('#fitpacksProvidedSessions').val(data.fitpacksProvidedSessions);
                $('#quartContainersProvidedUnits').val(data.quartContainersProvidedUnits);
                $('#quartContainersProvidedSessions').val(data.quartContainersProvidedSessions);
                $('#gallonContainersProvidedUnits').val(data.gallonContainersProvidedUnits);
                $('#gallonContainersProvidedSessions').val(data.gallonContainersProvidedSessions);
                $('#otherSuccessesConcernsIssues').val(data.otherSuccessesConcernsIssues);

                if (data.collectionDetails && Array.isArray(data.collectionDetails.$values)) {
                    data.collectionDetails.$values.forEach(function (detail) {
                        addCollectionDetailRow(detail.sharpsCollectionSite, detail.collectionDates, detail.poundsCollected);
                    });
                }

                // Populate the fields for Sharps Collection Site, Collection Dates, and Pounds Collected
                let collectionHtml = '';
                if (data.collectionDetails && data.collectionDetails.length > 0) {
                    data.collectionDetails.forEach(function (detail) {
                        collectionHtml += `
                    <div class="form-group">
                        <label>Sharps Collection Site</label>
                        <input type="text" class="form-control" value="${detail.sharpsCollectionSite || ''}" readonly>
                    </div>
                    <div class="form-group">
                        <label>Collection Dates</label>
                        <input type="text" class="form-control" value="${detail.collectionDates ? new Date(detail.collectionDates).toISOString().split('T')[0] : ''}" readonly>
                    </div>
                    <div class="form-group">
                        <label>Pounds Collected</label>
                        <input type="text" class="form-control" value="${detail.poundsCollected || ''}" readonly>
                    </div>`;
                    });
                } else {
                    collectionHtml = '<p>No Collection Details</p>';
                }

                $('#collectionDetails').html(collectionHtml);
            });
        }</script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>$(document).ready(function () {
            // Initialize any required JavaScript here
            $('.collapse').collapse(); // Initialize all collapsible elements
        });</script>
}
